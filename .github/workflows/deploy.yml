name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed
    branches: [main]

jobs:
  check-ci-status:
    name: Check CI Status
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check CI workflow status
        if: github.event_name == 'push'
        run: |
          echo "Direct push to main - CI will run automatically"
          echo "Amplify will handle the deployment after CI passes"

      - name: Deployment ready
        run: |
          echo "‚úÖ CI pipeline passed successfully"
          echo "üöÄ Ready for deployment to production"

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: check-ci-status
    if: github.ref == 'refs/heads/main' && (github.event.workflow_run.conclusion == 'success' || github.event_name == 'push')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build for production
        run: pnpm run build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_APP_URL: ${{ secrets.PRODUCTION_APP_URL || 'https://example.com' }}
          SENTRY_ORG: devpowerbg-ltd
          SENTRY_PROJECT: toki

      - name: Deploy to AWS Amplify
        run: |
          echo "üöÄ Deploying to production via AWS Amplify"
          echo "Amplify will automatically deploy when this workflow completes successfully"
          echo "Build artifacts are ready for deployment"

      - name: Notify deployment success
        if: success()
        run: |
          echo "‚úÖ Production deployment completed successfully"
          echo "üéâ Application is now live!"

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "‚ùå Production deployment failed"
          echo "Please check the logs and fix any issues"
          exit 1

  post-deploy:
    name: Post-Deployment Tasks
    runs-on: ubuntu-latest
    needs: [deploy-production]
    if: success()

    steps:
      - name: Health check
        run: |
          echo "üîç Running post-deployment health checks"
          # Add health check commands here
          # curl -f ${{ secrets.PRODUCTION_APP_URL }}/api/health || exit 1

      - name: Update monitoring
        run: |
          echo "üìä Updating monitoring dashboards"
          # Add monitoring update commands here

      - name: Cleanup old artifacts
        run: |
          echo "üßπ Cleaning up old build artifacts"
          # Add cleanup commands here
